[
    {
        "id": "flow1",
        "label": "SQL Generation Mode 示範",
        "nodes": [
            {
                "id": "inject1",
                "type": "inject",
                "z": "flow1",
                "name": "載入 users 表格",
                "topic": "",
                "payload": "{\"tableName\":\"users\"}",
                "payloadType": "json",
                "repeat": "",
                "crontab": "",
                "once": false,
                "onceDelay": 0.1,
                "x": 140,
                "y": 100,
                "wires": [["generation1"]]
            },
            {
                "id": "generation1",
                "type": "schema-bridge",
                "z": "flow1",
                "name": "SQL 生成模式",
                "sourceConnection": "mssql-conn1",
                "targetConnection": "",
                "sourceTable": "users",
                "targetTable": "users_postgres",
                "operationMode": "generation",
                "targetDbType": "postgres",
                "generateSql": true,
                "createTable": false,
                "x": 330,
                "y": 100,
                "wires": [["debug1", "template1"]]
            },
            {
                "id": "debug1",
                "type": "debug",
                "z": "flow1",
                "name": "SQL 輸出",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "payload.sql",
                "targetType": "msg",
                "x": 520,
                "y": 160,
                "wires": []
            },
            {
                "id": "template1",
                "type": "template",
                "z": "flow1",
                "name": "格式化 SQL",
                "field": "formattedSql",
                "fieldType": "msg",
                "format": "handlebars",
                "syntax": "mustache",
                "template": "-- Auto-generated CREATE TABLE for PostgreSQL\n-- Source: {{payload.sourceDbType}}.{{payload.sourceTable}}\n-- Target: {{payload.targetDbType}}\n-- Generated: {{payload.processedAt}}\n\n{{payload.sql}}",
                "output": "str",
                "x": 520,
                "y": 100,
                "wires": [["debug2"]]
            },
            {
                "id": "debug2",
                "type": "debug",
                "z": "flow1",
                "name": "格式化結果",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "formattedSql",
                "targetType": "msg",
                "x": 720,
                "y": 100,
                "wires": []
            }
        ]
    },
    {
        "id": "flow2",
        "label": "Database Connection Mode 示範",
        "nodes": [
            {
                "id": "inject2",
                "type": "inject",
                "z": "flow2",
                "name": "遷移 products 表格",
                "topic": "",
                "payload": "{\"tableName\":\"products\"}",
                "payloadType": "json",
                "repeat": "",
                "crontab": "",
                "once": false,
                "onceDelay": 0.1,
                "x": 150,
                "y": 240,
                "wires": [["connection1"]]
            },
            {
                "id": "connection1",
                "type": "schema-bridge",
                "z": "flow2",
                "name": "連線模式 - 生成並建立表格",
                "sourceConnection": "mssql-conn1",
                "targetConnection": "postgres-conn1",
                "sourceTable": "products",
                "targetTable": "products_migrated",
                "operationMode": "connection",
                "generateSql": true,
                "createTable": true,
                "x": 380,
                "y": 240,
                "wires": [["function1", "debug3"]]
            },
            {
                "id": "function1",
                "type": "function",
                "z": "flow2",
                "name": "檢查執行結果",
                "func": "if (msg.payload.success) {\n    if (msg.payload.createTable && msg.payload.generateSql) {\n        node.status({fill:\"green\",shape:\"dot\",text:`表格已建立: ${msg.payload.targetTable}`});\n        msg.result = \"SQL generated and table created successfully\";\n    } else if (msg.payload.generateSql) {\n        node.status({fill:\"blue\",shape:\"dot\",text:\"SQL 已生成\"});\n        msg.result = \"SQL generated successfully\";\n    }\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:\"執行失敗\"});\n    msg.result = \"Operation failed: \" + msg.payload.message;\n}\nreturn msg;",
                "outputs": 1,
                "noerr": 0,
                "x": 640,
                "y": 240,
                "wires": [["debug4"]]
            },
            {
                "id": "debug3",
                "type": "debug",
                "z": "flow2",
                "name": "完整結果",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "payload",
                "targetType": "msg",
                "x": 630,
                "y": 300,
                "wires": []
            },
            {
                "id": "debug4",
                "type": "debug",
                "z": "flow2",
                "name": "執行狀態",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "result",
                "targetType": "msg",
                "x": 830,
                "y": 240,
                "wires": []
            }
        ]
    },
    {
        "id": "flow3",
        "label": "批次 SQL 生成",
        "nodes": [
            {
                "id": "inject3",
                "type": "inject",
                "z": "flow3",
                "name": "批次處理多個表格",
                "topic": "",
                "payload": "{\"tables\":[\"orders\",\"customers\",\"order_items\"]}",
                "payloadType": "json",
                "repeat": "",
                "crontab": "",
                "once": false,
                "onceDelay": 0.1,
                "x": 160,
                "y": 380,
                "wires": [["split1"]]
            },
            {
                "id": "split1",
                "type": "split",
                "z": "flow3",
                "name": "分割表格清單",
                "splt": "\\n",
                "spltType": "str",
                "arraySplt": 1,
                "arraySpltType": "len",
                "stream": false,
                "addname": "tableName",
                "x": 360,
                "y": 380,
                "wires": [["function2"]]
            },
            {
                "id": "function2",
                "type": "function",
                "z": "flow3",
                "name": "準備參數",
                "func": "msg.payload = {\n    tableName: msg.payload\n};\nmsg.targetDbType = \"mysql\"; // 目標資料庫類型\nreturn msg;",
                "outputs": 1,
                "noerr": 0,
                "x": 540,
                "y": 380,
                "wires": [["generation2"]]
            },
            {
                "id": "generation2",
                "type": "schema-bridge",
                "z": "flow3",
                "name": "批次 SQL 生成",
                "sourceConnection": "mssql-conn1",
                "targetConnection": "",
                "sourceTable": "",
                "targetTable": "",
                "operationMode": "generation",
                "targetDbType": "mysql",
                "generateSql": true,
                "createTable": false,
                "x": 720,
                "y": 380,
                "wires": [["join1"]]
            },
            {
                "id": "join1",
                "type": "join",
                "z": "flow3",
                "name": "彙總 SQL",
                "mode": "auto",
                "build": "array",
                "property": "payload",
                "propertyType": "msg",
                "key": "topic",
                "joiner": "\\n",
                "joinerType": "str",
                "accumulate": false,
                "timeout": "",
                "count": "",
                "reduceRight": false,
                "reduceExp": "",
                "reduceInit": "",
                "reduceInitType": "",
                "reduceFixup": "",
                "x": 880,
                "y": 380,
                "wires": [["function3"]]
            },
            {
                "id": "function3",
                "type": "function",
                "z": "flow3",
                "name": "生成完整 SQL 腳本",
                "func": "let sqlScript = \"-- MySQL Migration Script\\n\";\nsqlScript += \"-- Generated: \" + new Date().toISOString() + \"\\n\\n\";\n\nmsg.payload.forEach((result, index) => {\n    sqlScript += `-- Table ${index + 1}: ${result.sourceTable}\\n`;\n    sqlScript += result.sql + \"\\n\\n\";\n});\n\nmsg.completeSql = sqlScript;\nmsg.summary = {\n    totalTables: msg.payload.length,\n    targetDbType: msg.payload[0]?.targetDbType || \"mysql\",\n    generatedAt: new Date().toISOString()\n};\n\nreturn msg;",
                "outputs": 1,
                "noerr": 0,
                "x": 1060,
                "y": 380,
                "wires": [["debug5", "debug6"]]
            },
            {
                "id": "debug5",
                "type": "debug",
                "z": "flow3",
                "name": "完整 SQL 腳本",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "completeSql",
                "targetType": "msg",
                "x": 1280,
                "y": 360,
                "wires": []
            },
            {
                "id": "debug6",
                "type": "debug",
                "z": "flow3",
                "name": "批次處理摘要",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "summary",
                "targetType": "msg",
                "x": 1280,
                "y": 400,
                "wires": []
            }
        ]
    },
    {
        "id": "flow4",
        "label": "僅生成 SQL 後手動建表",
        "nodes": [
            {
                "id": "inject4",
                "type": "inject",
                "z": "flow4",
                "name": "Step 1: 生成 SQL",
                "topic": "",
                "payload": "{\"tableName\":\"inventory\"}",
                "payloadType": "json",
                "repeat": "",
                "crontab": "",
                "once": false,
                "onceDelay": 0.1,
                "x": 140,
                "y": 520,
                "wires": [["generation3"]]
            },
            {
                "id": "generation3",
                "type": "schema-bridge",
                "z": "flow4",
                "name": "僅生成 SQL",
                "sourceConnection": "mssql-conn1",
                "targetConnection": "",
                "sourceTable": "inventory",
                "targetTable": "inventory_backup",
                "operationMode": "generation",
                "targetDbType": "postgres",
                "generateSql": true,
                "createTable": false,
                "x": 320,
                "y": 520,
                "wires": [["function4"]]
            },
            {
                "id": "function4",
                "type": "function",
                "z": "flow4",
                "name": "儲存 SQL 供後續使用",
                "func": "// 將 SQL 儲存到 flow context\nflow.set(\"generatedSql\", msg.payload.sql);\nflow.set(\"targetTable\", msg.payload.targetTable || \"inventory_backup\");\n\nmsg.sqlReady = true;\nmsg.message = \"SQL generated and stored, ready for manual execution\";\nreturn msg;",
                "outputs": 1,
                "noerr": 0,
                "x": 540,
                "y": 520,
                "wires": [["debug7", "inject5"]]
            },
            {
                "id": "debug7",
                "type": "debug",
                "z": "flow4",
                "name": "SQL 已準備",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "message",
                "targetType": "msg",
                "x": 750,
                "y": 480,
                "wires": []
            },
            {
                "id": "inject5",
                "type": "inject",
                "z": "flow4",
                "name": "Step 2: 執行建表",
                "topic": "",
                "payload": "{}",
                "payloadType": "json",
                "repeat": "",
                "crontab": "",
                "once": false,
                "onceDelay": 0.1,
                "x": 140,
                "y": 580,
                "wires": [["function5"]]
            },
            {
                "id": "function5",
                "type": "function",
                "z": "flow4",
                "name": "準備建表參數",
                "func": "// 從 flow context 取得之前生成的 SQL\nconst sql = flow.get(\"generatedSql\");\nconst targetTable = flow.get(\"targetTable\");\n\nif (!sql) {\n    msg.error = \"No SQL found. Please run Step 1 first.\";\n    return msg;\n}\n\nmsg.payload = {\n    tableName: \"inventory\", // 來源表格（實際上這裡不會重新分析）\n    customSql: sql,        // 使用之前生成的 SQL\n    targetTable: targetTable\n};\n\nreturn msg;",
                "outputs": 1,
                "noerr": 0,
                "x": 340,
                "y": 580,
                "wires": [["connection2"]]
            },
            {
                "id": "connection2",
                "type": "schema-bridge",
                "z": "flow4",
                "name": "僅建立表格",
                "sourceConnection": "",
                "targetConnection": "postgres-conn1",
                "sourceTable": "",
                "targetTable": "",
                "operationMode": "connection",
                "generateSql": false,
                "createTable": true,
                "x": 560,
                "y": 580,
                "wires": [["debug8"]]
            },
            {
                "id": "debug8",
                "type": "debug",
                "z": "flow4",
                "name": "建表結果",
                "active": true,
                "tosidebar": true,
                "console": false,
                "tostatus": false,
                "complete": "payload",
                "targetType": "msg",
                "x": 750,
                "y": 580,
                "wires": []
            }
        ]
    },
    {
        "id": "mssql-conn1",
        "type": "Schema Bridge Connection",
        "name": "SQL Server 連接",
        "dbType": "mssql",
        "server": "localhost",
        "port": "1433",
        "database": "testdb",
        "domain": "",
        "appName": "atomic-schema-bridge",
        "encryption": false,
        "trustServerCertificate": true,
        "connectionTimeout": 15000,
        "requestTimeout": 15000,
        "connectionRetryInterval": 3000,
        "poolMin": 1,
        "poolMax": 10,
        "poolIdleTimeoutMillis": 30000
    },
    {
        "id": "postgres-conn1",
        "type": "Schema Bridge Connection",
        "name": "PostgreSQL 連接",
        "dbType": "postgres",
        "server": "localhost",
        "port": "5432",
        "database": "testdb",
        "ssl": false,
        "connectionTimeout": 15000,
        "requestTimeout": 15000,
        "connectionRetryInterval": 3000,
        "poolMin": 1,
        "poolMax": 10,
        "poolIdleTimeoutMillis": 30000
    },
    {
        "id": "mysql-conn1",
        "type": "Schema Bridge Connection",
        "name": "MySQL 連接",
        "dbType": "mysql",
        "server": "localhost",
        "port": "3306",
        "database": "testdb",
        "connectionTimeout": 15000,
        "requestTimeout": 15000,
        "connectionRetryInterval": 3000,
        "poolMin": 1,
        "poolMax": 10,
        "poolIdleTimeoutMillis": 30000
    }
] 